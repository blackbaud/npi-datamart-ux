language: node_js
node_js:
  - '4'

git:
  depth: 10

before_install:
  # Used throughout the bash scripts
  - export LAST_COMMIT_MESSAGE=`git log --format=%B -n 1 $TRAVIS_COMMIT`
  - export RELEASE_VERSION="${LAST_COMMIT_MESSAGE#Release v}"
  - export RELEASE_COMMENT="^Release v[0-9]+\.[0-9]+\.[0-9]+"
  - export RELEASE_BRANCH="master""
  - if [[ "$TRAVIS_PULL_REQUEST" == "false" && $TRAVIS_BRANCH =~ $RELEASE_BRANCH && $LAST_COMMIT_MESSAGE =~ $RELEASE_COMMENT ]]; then export IS_RELEASE=true; else export IS_RELEASE=false; fi

  - rvm install ruby-2.3.0

  # Make our three scripts executable
  - chmod +x ./scripts/update-npi-datamart-ux.sh
  - chmod +x ./scripts/update-npi-datamart-ux-docs.sh
  - chmod +x ./scripts/update-npi-datamart-ux-releases.sh

  # https://github.com/npm/npm/issues/11283
  - npm set progress=false

# Install a few additional things outside those listed in package.json
before_script:
  - npm install -g grunt-cli

# We want deployment failures to fail the build
script: npm test && ./scripts/update-npi-datamart-ux.sh && ./scripts/update-npi-datamart-ux-releases.sh && ./scripts/update-npi-datamart-ux-docs.sh

# Store any visual regressions
after_failure:
  - if [ -e ./npm-debug.log ]; then cat ./npm-debug.log; fi

# When a push, only care about the master branch.
# Otherwise anytime we commit to internal branches this would run.
branches:
  only:
    - master

# Cache a few things
cache:
  directories:
    - node_modules
