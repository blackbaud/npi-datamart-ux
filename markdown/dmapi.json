[
  {
    "id": "npi-datamart.module:api",
    "longname": "npi-datamart.module:api",
    "name": "api",
    "kind": "module",
    "description": "Data Mart API\rAPI module for NPI Data Mart UX",
    "meta": {
      "lineno": 7,
      "filename": "datamartapi.js",
      "path": "C:\\Users\\andrew.rather\\GitHub\\npi-datamart-ux\\js\\src\\datamartapi"
    },
    "order": 0
  },
  {
    "id": "npi-datamart.module:api~BBDataMartAPI",
    "longname": "npi-datamart.module:api~BBDataMartAPI",
    "name": "BBDataMartAPI",
    "scope": "inner",
    "kind": "function",
    "description": "An Angular Factory for generating BBDataMartAPI objects",
    "memberof": "npi-datamart.module:api",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "Object containing the information for the authentication and datamart",
        "name": "options"
      },
      {
        "type": {
          "names": [
            "BBDataMartAuthentication"
          ]
        },
        "description": "A BBDataMartAuthentication object",
        "name": "options.authentication"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "ID of the datamart",
        "name": "options.dataMartId"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "A promise to return the Data Mart ID as a string. Required if dataMartId not provided.",
        "name": "options.getDataMartId"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "A funtion returning a promise that returns a data mart identifier based on a provided identifier.  This is a hook to allow custom identifier translation.",
        "name": "options.translateObjectIdentifier"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "A funtion returning a promise that returns a filters object based on a provided filters object.  This is a hook to allow custom filters translation.",
        "name": "options.translateFilters"
      },
      {
        "type": {
          "names": [
            "function"
          ]
        },
        "optional": true,
        "description": "A function that returns a translated attribute name based on a provided attribute name.",
        "name": "options.translateAttributeName"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "BBDataMartAPI"
          ]
        },
        "description": "A class containing methods to handle interactions with the Data Mart APIs"
      }
    ],
    "meta": {
      "lineno": 14,
      "filename": "datamartapi.js",
      "path": "C:\\Users\\andrew.rather\\GitHub\\npi-datamart-ux\\js\\src\\datamartapi"
    },
    "order": 1
  },
  {
    "id": "npi-datamart.module:api~getDataMartId",
    "longname": "npi-datamart.module:api~getDataMartId",
    "name": "getDataMartId",
    "scope": "inner",
    "kind": "function",
    "description": "Gets the Data Mart ID",
    "memberof": "npi-datamart.module:api",
    "returns": [
      {
        "type": {
          "names": [
            "CallExpression"
          ]
        },
        "description": "A promise to return the Data Mart ID as a string"
      }
    ],
    "meta": {
      "lineno": 43,
      "filename": "datamartapi.js",
      "path": "C:\\Users\\andrew.rather\\GitHub\\npi-datamart-ux\\js\\src\\datamartapi"
    },
    "order": 2
  },
  {
    "id": "npi-datamart.module:api~getApiRoot",
    "longname": "npi-datamart.module:api~getApiRoot",
    "name": "getApiRoot",
    "scope": "inner",
    "kind": "function",
    "description": "Get the root of the API",
    "memberof": "npi-datamart.module:api",
    "returns": [
      {
        "type": {
          "names": [
            "CallExpression"
          ]
        },
        "description": "A promise to return the root URL of the API as a string"
      }
    ],
    "meta": {
      "lineno": 58,
      "filename": "datamartapi.js",
      "path": "C:\\Users\\andrew.rather\\GitHub\\npi-datamart-ux\\js\\src\\datamartapi"
    },
    "order": 3
  },
  {
    "id": "npi-datamart.module:api~platformIsAvailable",
    "longname": "npi-datamart.module:api~platformIsAvailable",
    "name": "platformIsAvailable",
    "scope": "inner",
    "kind": "function",
    "description": "Check if the platform is available.",
    "memberof": "npi-datamart.module:api",
    "returns": [
      {
        "type": {
          "names": [
            "CallExpression"
          ]
        },
        "description": "A promise for if the platform is available as a boolean"
      }
    ],
    "meta": {
      "lineno": 472,
      "filename": "datamartapi.js",
      "path": "C:\\Users\\andrew.rather\\GitHub\\npi-datamart-ux\\js\\src\\datamartapi"
    },
    "order": 4
  },
  {
    "id": "npi-datamart.module:api~getObjectUriFromIdentifier",
    "longname": "npi-datamart.module:api~getObjectUriFromIdentifier",
    "name": "getObjectUriFromIdentifier",
    "scope": "inner",
    "kind": "function",
    "description": "Gets the object URI from an identifier",
    "memberof": "npi-datamart.module:api",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Identifier for a Data Mart report or dashboard",
        "name": "identifier"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CallExpression"
          ]
        },
        "description": "A promise to return the relative URI for the Data Mart report or dashboard"
      }
    ],
    "meta": {
      "lineno": 491,
      "filename": "datamartapi.js",
      "path": "C:\\Users\\andrew.rather\\GitHub\\npi-datamart-ux\\js\\src\\datamartapi"
    },
    "order": 5
  },
  {
    "id": "npi-datamart.module:api~executeReport",
    "longname": "npi-datamart.module:api~executeReport",
    "name": "executeReport",
    "scope": "inner",
    "kind": "function",
    "description": "Execites a report based on an identifier and filters",
    "memberof": "npi-datamart.module:api",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Identifier for the report",
        "name": "reportIdentifier"
      },
      {
        "type": {
          "names": [
            "Array.<Object>"
          ]
        },
        "description": "Filters for the report",
        "name": "filters"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The name of the attribute to be filtered",
        "name": "filters[].attribute"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The display form of the attribute that will be filtered. This is required if you do not provide attribute",
        "name": "filters[].attributeDisplayForm"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The filter value",
        "name": "filters[].value"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CallExpression"
          ]
        },
        "description": "A promise to return the result of the report as an Object"
      }
    ],
    "meta": {
      "lineno": 505,
      "filename": "datamartapi.js",
      "path": "C:\\Users\\andrew.rather\\GitHub\\npi-datamart-ux\\js\\src\\datamartapi"
    },
    "order": 6
  },
  {
    "id": "npi-datamart.module:api~getHeadlineReportData",
    "longname": "npi-datamart.module:api~getHeadlineReportData",
    "name": "getHeadlineReportData",
    "scope": "inner",
    "kind": "function",
    "description": "Executes a report that returns a single data value",
    "memberof": "npi-datamart.module:api",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Identifier for the report",
        "name": "reportIdentifier"
      },
      {
        "type": {
          "names": [
            "Array.<Object>"
          ]
        },
        "description": "Filters for the report",
        "name": "filters"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The name of the attribute to be filtered",
        "name": "filters[].attribute"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The display form of the attribute that will be filtered. This is required if you do not provide attribute",
        "name": "filters[].attributeDisplayForm"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The filter value",
        "name": "filters[].value"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CallExpression"
          ]
        },
        "description": "A promise to return the result of the report as a single string"
      }
    ],
    "meta": {
      "lineno": 523,
      "filename": "datamartapi.js",
      "path": "C:\\Users\\andrew.rather\\GitHub\\npi-datamart-ux\\js\\src\\datamartapi"
    },
    "order": 7
  },
  {
    "id": "npi-datamart.module:api~getHeadlineReportDrillContext",
    "longname": "npi-datamart.module:api~getHeadlineReportDrillContext",
    "name": "getHeadlineReportDrillContext",
    "scope": "inner",
    "kind": "function",
    "description": "Gets an object that can be used to drill into the context of a headline report",
    "memberof": "npi-datamart.module:api",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Identifier for the report",
        "name": "reportIdentifier"
      },
      {
        "type": {
          "names": [
            "Array.<Object>"
          ]
        },
        "description": "Filters for the report",
        "name": "filters"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The name of the attribute to be filtered",
        "name": "filters[].attribute"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "optional": true,
        "description": "The display form of the attribute that will be filtered. This is required if you do not provide attribute",
        "name": "filters[].attributeDisplayForm"
      },
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "The filter value",
        "name": "filters[].value"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CallExpression"
          ]
        },
        "description": "A promise that will return an object to be used to drill into the context of a headline report"
      }
    ],
    "meta": {
      "lineno": 543,
      "filename": "datamartapi.js",
      "path": "C:\\Users\\andrew.rather\\GitHub\\npi-datamart-ux\\js\\src\\datamartapi"
    },
    "order": 8
  },
  {
    "id": "npi-datamart.module:api~loadDrillInRecordIds",
    "longname": "npi-datamart.module:api~loadDrillInRecordIds",
    "name": "loadDrillInRecordIds",
    "scope": "inner",
    "kind": "function",
    "description": "Load the drilled in records from a context",
    "memberof": "npi-datamart.module:api",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "description": "Context from the getHeadlineReportDrillContext or from a Data Mart directive",
        "name": "drillContext"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CallExpression"
          ]
        },
        "description": "A promise to return the drilled in records object"
      }
    ],
    "meta": {
      "lineno": 561,
      "filename": "datamartapi.js",
      "path": "C:\\Users\\andrew.rather\\GitHub\\npi-datamart-ux\\js\\src\\datamartapi"
    },
    "order": 9
  },
  {
    "id": "npi-datamart.module:api~getLatestReportDefinition",
    "longname": "npi-datamart.module:api~getLatestReportDefinition",
    "name": "getLatestReportDefinition",
    "scope": "inner",
    "kind": "function",
    "description": "Gets the latest report definition",
    "memberof": "npi-datamart.module:api",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "Identifier for the report",
        "name": "reportIdentifier"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CallExpression"
          ]
        },
        "description": "A promise to return the most recent definition of the report as an object"
      }
    ],
    "meta": {
      "lineno": 575,
      "filename": "datamartapi.js",
      "path": "C:\\Users\\andrew.rather\\GitHub\\npi-datamart-ux\\js\\src\\datamartapi"
    },
    "order": 10
  },
  {
    "id": "npi-datamart.module:api~getObjectDefinitionByUri",
    "longname": "npi-datamart.module:api~getObjectDefinitionByUri",
    "name": "getObjectDefinitionByUri",
    "scope": "inner",
    "kind": "function",
    "description": "Get an object definition by a URI",
    "memberof": "npi-datamart.module:api",
    "params": [
      {
        "type": {
          "names": [
            "string"
          ]
        },
        "description": "URI of the object",
        "name": "objectUri"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CallExpression"
          ]
        },
        "description": "A promise to return the object based on a URI"
      }
    ],
    "meta": {
      "lineno": 589,
      "filename": "datamartapi.js",
      "path": "C:\\Users\\andrew.rather\\GitHub\\npi-datamart-ux\\js\\src\\datamartapi"
    },
    "order": 11
  },
  {
    "id": "npi-datamart.module:api~maintainAuthentication",
    "longname": "npi-datamart.module:api~maintainAuthentication",
    "name": "maintainAuthentication",
    "scope": "inner",
    "kind": "function",
    "description": "Maintains the authentication",
    "memberof": "npi-datamart.module:api",
    "params": [
      {
        "type": {
          "names": [
            "Object"
          ]
        },
        "name": "scope"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "CallExpression"
          ]
        },
        "description": "A promise to let you know when the authentication is maintained"
      }
    ],
    "meta": {
      "lineno": 603,
      "filename": "datamartapi.js",
      "path": "C:\\Users\\andrew.rather\\GitHub\\npi-datamart-ux\\js\\src\\datamartapi"
    },
    "order": 12
  }
]
